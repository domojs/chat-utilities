{"version":3,"sources":["../interpreter.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,6BAA+B;AAE/B,+DAAqG;AAKrG;IAA0C,wCAAkB;IAA5D;QAAA,qEAsBC;QApBG,aAAO,GAAG,EAAE,OAAO,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC;QAC5D,cAAQ,GAAG,EAAE,aAAa,EAAE,CAAC,aAAa,CAAC,EAAE,MAAM,EAAE,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,CAAC,wBAAwB,EAAE,mBAAmB,EAAE,aAAa,CAAC,EAAE,CAAC;QACzI,YAAM,GAAG,EAAE,SAAS,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,CAAC,EAAE,CAAC;;IAkB/D,CAAC;IAhBU,sCAAO,GAAd,UAAe,OAA+B,EAAE,IAA2B,EAAE,QAAkC;QAE3G,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CACxB,CAAC;YACG,KAAK,MAAM;gBACP,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC;gBACnE,KAAK,CAAC;QACd,CAAC;IACL,CAAC;IAEM,yCAAU,GAAjB,UAAkB,OAA+B;QAE7C,iBAAM,UAAU,YAAC,OAAO,CAAC,CAAC;QAC1B,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;YAChB,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;IACjC,CAAC;IAAA,CAAC;IACN,2BAAC;AAAD,CAtBA,AAsBC,CAtByC,6BAAkB,GAsB3D;AAtBY,oDAAoB;AAwBjC,IAAI,oBAAoB,EAAE,CAAC,QAAQ,EAAE,CAAC","file":"interpreter.js","sourcesContent":["import * as di from 'akala-core';\r\nimport * as Sugar from 'sugar';\r\nimport * as Weather from '../../../weather';\r\nimport { KeywordInterpreter, KeywordContext, Interpreter } from '../../../chat/dist/server/language';\r\nimport { Context } from '../../../chat-date';\r\n\r\nexport type KeywordWithTimeContext = KeywordContext & Context;\r\n\r\nexport class UtilitiesInterpreter extends KeywordInterpreter\r\n{\r\n    actions = { \"which\": [\"quel\", \"quelle\"], \"is\": [\"est-ce\"] };\r\n    keywords = { \"temperature\": [\"temperature\"], \"time\": [\"heure\"], \"rain\": [\"va y avoir de la pluie\", \"qu'il va pleuvoir\", \"qu'il pleut\"] };\r\n    others = { \"useless\": [\"est-il\", \"fait-il\", \"fera-t-il\"] };\r\n\r\n    public execute(context: KeywordWithTimeContext, next: (error?: any) => void, callback: (answer: string) => void)\r\n    {\r\n        switch (context.keyword)\r\n        {\r\n            case 'time':\r\n                callback('il est ' + Sugar.Date.format(new Date(), '{24hr}:{mm}'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    public understand(context: KeywordWithTimeContext)\r\n    {\r\n        super.understand(context);\r\n        if (context.keyword)\r\n            context.deferred = false;\r\n    };\r\n}\r\n\r\nnew UtilitiesInterpreter().register();"],"sourceRoot":"chat-utilities/src/server"}